{
  "apiVersion" : "1.0",
  "swaggerVersion" : "1.2",
  "basePath" : "/rest",
  "resourcePath" : "/external/v1/{agencyid}/patron/{patronid}",
  "apis" : [ {
    "path" : "/external/v1/{agencyid}/patron/{patronid}/fees",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "getFees",
      "type" : "array",
      "items" : {
        "$ref" : "Fee"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "ISIL of the agency (e.g. DK-761500)",
        "paramType" : "path",
        "name" : "agencyid",
        "required" : true
      }, {
        "type" : "integer",
        "format" : "int64",
        "description" : "the patron that owns the fees",
        "paramType" : "path",
        "name" : "patronid",
        "required" : true
      }, {
        "type" : "boolean",
        "description" : "true if all paid/unpaid fees should be included, false if only unpaid fees should\n                    be included; default=false",
        "paramType" : "query",
        "name" : "includepaid",
        "required" : true
      }, {
        "type" : "boolean",
        "description" : "true if fees that are not payable through a CMS system should be included (for read\n                          only access); default=false",
        "paramType" : "query",
        "name" : "includenonpayable",
        "required" : true
      } ],
      "summary" : "List of fees in FBS for the patron with all available information about the fee.",
      "notes" : "\n Returns array of fees.\n <p>If the fee covers loaned materials, information about the materials is returned.\n Each fee in the response includes a 'type', which is used to distinguish between different types of\n fees.</p>\n <p>If the material exists no more, which is the case for fees that are related to closed interlibraryloans,\n then the fee is still returned, but without material information</p>\n The list of available types currently is\n <ul>\n <li>fee</li>\n <li>compensation</li>\n </ul>\n <p>While the type can be used by client systems to look up a suitable display message for the end user, it is\n important that unrecognized types are treated as 'other'.</p>",
      "responseMessages" : [ {
        "code" : 400,
        "message" : "bad request"
      }, {
        "code" : 401,
        "message" : "client unauthorized"
      } ]
    } ]
  }, {
    "path" : "/external/v1/{agencyid}/patron/{patronid}/payment",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "payFees",
      "type" : "array",
      "items" : {
        "$ref" : "PaymentConfirmation"
      },
      "parameters" : [ {
        "type" : "string",
        "description" : "ISIL of the agency (e.g. DK-761500)",
        "paramType" : "path",
        "name" : "agencyid",
        "required" : true
      }, {
        "type" : "integer",
        "format" : "int64",
        "description" : "the patron that owns the fees",
        "paramType" : "path",
        "name" : "patronid",
        "required" : true
      }, {
        "type" : "PaymentOrder",
        "description" : "registration of fees covered by a payment order",
        "paramType" : "body",
        "name" : "paymentOrder",
        "required" : true
      } ],
      "summary" : "Pay fees.",
      "notes" : "\n Returns array of payment confirmations for each fee.\n <p>This call is used to inform FBS that a payment have been completed successful from the payment gateway\n through the CMS client system. The payment contain the order ID from the payment gateway (e.g. dibs) and the\n fee identifiers for fees covered by the payment. It is expected that a fee has been paid in full when covered\n by a payment order. The client system is not allowed to offer partial payment of individual fees.</p>\n The paymentStatus on the response can be any of these values:\n <ul>\n   <li>- paymentRegistered</li>\n   <li>- paymentRegisteredByDifferentOrderId</li>\n   <li>- paymentNotAllowedByClient</li>\n </ul>\n <p>If any other value is encountered, it should be treated as yet another reason for not registerering payment of\n a fee using the specified order id.</p>\n <p>Multiple calls to pay a fee with the same\n order Id will return the same confirmationId, and the payment will have paymentStatus=='paymentRegistered'.</p>\n <p>If a fee has already been paid using a different orderId then no confirmationId is provided, and the\n payment will have paymentStatus=='paymentRegisteredByDifferentOrderId'.</p>\n <p>If the client system was not allowed to offer payment of a fee, then no confirmationId is provided, and the\n payment will have paymentStatus=='paymentNotAllowedByClient'.</p>",
      "responseMessages" : [ {
        "code" : 400,
        "message" : "bad request"
      }, {
        "code" : 401,
        "message" : "client unauthorized"
      } ]
    } ]
  } ],
  "models" : {
    "PaymentOrder" : {
      "id" : "PaymentOrder",
      "properties" : {
        "orderId" : {
          "type" : "string",
          "description" : "Order Id from payment gateway"
        },
        "feeIds" : {
          "type" : "array",
          "description" : "Array of fees fully covered by the order",
          "items" : {
            "type" : "integer"
          }
        }
      },
      "required" : [ "orderId", "feeIds" ]
    },
    "PaymentConfirmation" : {
      "id" : "PaymentConfirmation",
      "properties" : {
        "orderId" : {
          "type" : "string",
          "description" : "Order Id from payment gateway"
        },
        "confirmationId" : {
          "type" : "string",
          "description" : "set if fee was registered when using the orderId, unset otherwise (see paymentStatus for reason)"
        },
        "feeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "paymentStatus" : {
          "type" : "string"
        }
      },
      "required" : [ "orderId", "feeId", "paymentStatus" ]
    },
    "FeeMaterial" : {
      "id" : "FeeMaterial",
      "properties" : {
        "recordId" : {
          "type" : "string",
          "description" : "The FAUST number of the bibliographic record"
        },
        "periodical" : {
          "type" : "Periodical",
          "description" : "Present if material is a periodical"
        },
        "materialGroupName" : {
          "type" : "string",
          "description" : "Name of the material group that the material belongs to"
        },
        "materialItemNumber" : {
          "type" : "string",
          "description" : "Identifies the exact material covered by the fee"
        }
      },
      "required" : [ "recordId", "materialGroupName", "materialItemNumber" ]
    },
    "Periodical" : {
      "id" : "Periodical",
      "properties" : {
        "volume" : {
          "type" : "string"
        },
        "volumeYear" : {
          "type" : "string"
        },
        "displayText" : {
          "type" : "string",
          "description" : "A representation of the periodica volume information that is suitable for display"
        },
        "volumeNumber" : {
          "type" : "string"
        }
      },
      "required" : [ "displayText" ]
    },
    "Fee" : {
      "id" : "Fee",
      "properties" : {
        "payableByClient" : {
          "type" : "boolean",
          "description" : "true if the client system is allowed to offer payment for the fee, false if not allowed"
        },
        "amount" : {
          "type" : "number",
          "format" : "double",
          "description" : "The amount to pay, in the currency of the agency"
        },
        "paidDate" : {
          "type" : "string",
          "description" : "If the fee has been paid in full, this will be set to the date of the final payment, otherwise not set"
        },
        "materials" : {
          "type" : "array",
          "description" : "Set if fee covers materials",
          "items" : {
            "$ref" : "FeeMaterial"
          }
        },
        "reasonMessage" : {
          "type" : "string",
          "description" : "Human readable free text message about the reason for the fee, presentable to an end user (language is likely\n to be the mother tongue of the agency)"
        },
        "dueDate" : {
          "type" : "string",
          "description" : "Expected payment due date"
        },
        "type" : {
          "type" : "string",
          "description" : "Can be used to distinguish between different types of fees"
        },
        "creationDate" : {
          "type" : "string",
          "description" : "The date the fee was created"
        },
        "feeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifies the fee, used when registering a payment that covers the fee"
        }
      },
      "required" : [ "payableByClient", "amount", "materials", "reasonMessage", "type", "creationDate", "feeId" ]
    }
  }
}